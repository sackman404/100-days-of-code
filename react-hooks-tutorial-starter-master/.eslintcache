[{"/Users/marble.zaki/Documents/100-days-of-code/react-hooks-tutorial-starter-master/src/index.tsx":"1","/Users/marble.zaki/Documents/100-days-of-code/react-hooks-tutorial-starter-master/src/App.tsx":"2","/Users/marble.zaki/Documents/100-days-of-code/react-hooks-tutorial-starter-master/src/components/BookSearchDialog.tsx":"3","/Users/marble.zaki/Documents/100-days-of-code/react-hooks-tutorial-starter-master/src/components/BookSearchItem.tsx":"4","/Users/marble.zaki/Documents/100-days-of-code/react-hooks-tutorial-starter-master/src/components/BookRow.tsx":"5"},{"size":219,"mtime":1615617205626,"results":"6","hashOfConfig":"7"},{"size":4558,"mtime":1615619584496,"results":"8","hashOfConfig":"7"},{"size":3866,"mtime":1615617314197,"results":"9","hashOfConfig":"7"},{"size":771,"mtime":1615625130522,"results":"10","hashOfConfig":"7"},{"size":953,"mtime":1615213998583,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"fxglk7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/marble.zaki/Documents/100-days-of-code/react-hooks-tutorial-starter-master/src/index.tsx",[],["24","25"],"/Users/marble.zaki/Documents/100-days-of-code/react-hooks-tutorial-starter-master/src/App.tsx",["26"],"import { FC, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Modal from \"react-modal\";\nimport { BookToRead } from \"./BookToRead\";\nimport BookRow from \"./components/BookRow\";\nimport BookSearchDialog from \"./components/BookSearchDialog\";\nimport { BookDescription } from \"./BookDescription\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nModal.setAppElement(\"#root\");\n\nconst customStyle = {\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.8\",\n  },\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    padding: 0,\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 2,\n      color: \"#388e3c\",\n      backgroundColor: \"#81c784\",\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 2,\n      textAlign: \"center\",\n    },\n  })\n);\n\nconst APP_KEY = \"react-hooks-tutorial\";\n\n// const dummyBooks: BookToRead[] = [\n//   {\n//     id: 1,\n//     title: \"はじめてのReact\",\n//     authors: \"ダミー\",\n//     memo: \"\",\n//   },\n//   {\n//     id: 2,\n//     title: \"React Hooks入門\",\n//     authors: \"ダミー\",\n//     memo: \"\",\n//   },\n//   {\n//     id: 3,\n//     title: \"実践Reactアプリケーション開発\",\n//     authors: \"ダミー\",\n//     memo: \"\",\n//   },\n// ];\n\nconst App = () => {\n  // Hooksによる状態管理を行う変数を設定\n  const [books, setBooks] = useState([] as BookToRead[]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const classes = useStyles();\n\n  // ローカルのエリアに保存しているほんのデータを取得している。\n  // 第二引数がからの配列のため、マウント時に１回だけ実行される\n  useEffect(() => {\n    const storeBooks = localStorage.getItem(APP_KEY);\n    if (storeBooks) {\n      setBooks(JSON.parse(storeBooks));\n    }\n  }, []);\n\n  // ローカルエリアに格納されているデータを取得\n  useEffect(() => {\n    localStorage.setItem(APP_KEY, JSON.stringify(books));\n  }, [books]);\n\n  // 本の一覧を表示するコンポーネントを登録している\n  const bookRows = books.map((b) => {\n    return (\n      <BookRow\n        book={b}\n        key={b.id}\n        onMemoChange={(id, memo) => {\n          handleBookMemoChange(id, memo);\n        }}\n        onDelete={(id) => {\n          handleDeleteClick(id);\n        }}\n      />\n    );\n  });\n\n  // 削除ボタンが押された時にロジックを実装\n  const handleDeleteClick = (id: number) => {\n    const newBooks = books.filter((b) => b.id !== id);\n    setBooks(newBooks);\n  };\n\n  // メモ欄が書き換えられた時に、内容が変更される\n  const handleBookMemoChange = (id: number, memo: string) => {\n    const newBooks = books.map((b) => {\n      return b.id === id ? { ...b, memo: memo } : b;\n    });\n    setBooks(newBooks);\n  };\n\n  //本を追加を押した時にmodalをのstateを変更する\n  const handleAddClick = () => {\n    setModalIsOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalIsOpen(false);\n  };\n\n  const handleBookAdd = (book: BookDescription) => {\n    const newBook: BookToRead = { ...book, id: Date.now(), memo: \"\" };\n    const newBooks = [...books, newBook];\n    setBooks(newBooks);\n    setModalIsOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      {/* <section className=\"nav\"> */}\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Typography variant=\"h4\" className={classes.title}>\n            読みたい本リスト\n          </Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleAddClick}>\n            本を追加\n          </Button>\n        </Toolbar>\n      </AppBar>\n      {/* <h1>読みたい本リスト</h1> */}\n      {/* <div className=\"button-like\" onClick={handleAddClick}>\n          本を追加\n        </div> */}\n      {/* </section> */}\n      <section className=\"main\">{bookRows}</section>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={handleModalClose}\n        style={customStyle}\n      >\n        <BookSearchDialog\n          maxResults={20}\n          onBookAdd={(b) => {\n            handleBookAdd(b);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/marble.zaki/Documents/100-days-of-code/react-hooks-tutorial-starter-master/src/components/BookSearchDialog.tsx",[],"/Users/marble.zaki/Documents/100-days-of-code/react-hooks-tutorial-starter-master/src/components/BookSearchItem.tsx",[],"/Users/marble.zaki/Documents/100-days-of-code/react-hooks-tutorial-starter-master/src/components/BookRow.tsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":10,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]